{"version":3,"sources":["pages/SingleProduct/index.js","components/error/index.js","utils/formatPrice.js"],"names":["SingleProduct","addCartItem","useGlobalContext","id","useParams","useState","item","setItem","error","setError","isLoading","setIsLoading","currentImage","setCurrentImage","showMsg","setShowMsg","useEffect","axios","get","then","res","data","catch","err","x","setTimeout","clearTimeout","className","to","img","map","image","index","src","alt","name","onClick","formatPrice","price","weight","description","stock","_id","Error","number","Intl","NumberFormat","style","currency","format","replace"],"mappings":"mOAoGeA,UA1FO,WAAO,IAClBC,EAAeC,cAAfD,YACAE,EAAMC,cAAND,GAFiB,EAGDE,mBAAS,IAHR,mBAGjBC,EAHiB,KAGZC,EAHY,OAICF,oBAAS,GAJV,mBAIjBG,EAJiB,KAIXC,EAJW,OAKSJ,oBAAS,GALlB,mBAKjBK,EALiB,KAKPC,EALO,OAMeN,mBAAS,GANxB,mBAMjBO,EANiB,KAMJC,EANI,OAOKR,oBAAS,GAPd,mBAOjBS,EAPiB,KAOTC,EAPS,KA6BxB,OApBAC,qBAAU,WACNP,GAAS,GACTE,GAAa,GACbM,IAAMC,IAAN,wBAA2Bf,IACtBgB,MAAK,SAAAC,GACFb,EAAQa,EAAIC,MACZV,GAAa,MAEhBW,OAAM,SAACC,GAAQd,GAAS,QAC/B,IAEFO,qBAAU,WACN,IAAIQ,EAAIC,YAAW,WACfV,GAAW,KACb,KACF,OAAO,WACHW,aAAaF,MAEnB,CAACV,IAEAJ,EACQ,cAAC,IAAD,IAERF,EACQ,cAAC,IAAD,IAGP,mCACKF,EAAKE,MAAM,qBAAKmB,UAAU,aAAf,SAA6BrB,EAAKE,QAC1C,sBAAKmB,UAAU,OAAf,UACI,qBAAKA,UAAS,UAAKb,EAAQ,mBAAoB,eAA/C,SACI,sBAAKa,UAAU,SAAf,UACI,sBAAMA,UAAU,MAAhB,wBACA,cAAC,IAAD,CAAMC,GAAG,QAAT,0BAGR,sBAAKD,UAAU,yBAAf,UAEI,qBAAKA,UAAU,eAAf,SACI,sBAAKA,UAAU,wBAAf,UACI,qBAAKA,UAAU,YAAf,SACKrB,EAAKuB,KAAOvB,EAAKuB,IAAIC,KAAI,SAACC,EAAMC,GAC7B,OAAO,qBAAkBL,UAAS,UAAKf,IAAeoB,EAAM,SAAS,MAAQC,IAAG,gDAA2CF,GAASG,IAAK5B,GAAQA,EAAK6B,MAApIH,QAG1B,qBAAKL,UAAU,mBAAf,SACKrB,EAAKuB,KAAOvB,EAAKuB,IAAIC,KAAI,SAACC,EAAMC,GAC7B,OAAO,sBAAML,UAAS,sBAAiBf,IAAeoB,EAAM,SAAS,MAAoBI,QAAS,kBAAIvB,EAAgBmB,IAA/G,SAAuH,qBAAKL,UAAU,qBAAqBM,IAAG,gDAA2CF,GAASG,IAAI,MAA3IF,aAMlG,qBAAKL,UAAU,aAAf,SACI,sBAAKA,UAAU,sBAAf,UACI,mBAAGA,UAAU,mBAAb,SAAiCrB,EAAK6B,OACtC,oBAAGR,UAAU,oBAAb,oBAAyCU,YAAY/B,EAAKgC,UAC1D,mBAAGX,UAAU,qBAAb,SAAiD,SAAdrB,EAAKiC,OAAgB,GAAGjC,EAAKiC,SAChE,mBAAGZ,UAAU,mBAAb,SAAiCrB,EAAKkC,cACrClC,EAAKmC,MACF,mCACA,qBAAKd,UAAU,cAAf,SACI,sBAAMA,UAAU,eAAeS,QAAS,WAAKrB,GAAW,GAAOd,EAAYK,EAAKoC,IAAI,IAApF,6BAGH,qBAAKf,UAAU,mBAAf,mE,gCCpFrC,sBAWegB,IARD,WACV,OACI,qBAAKhB,UAAU,eAAf,SACI,uD,qDCNZ,kCAAO,IAAMU,EAAc,SAACO,GAKxB,OAJkBC,KAAKC,aAAa,QAAQ,CACxCC,MAAO,WACPC,SAAU,QACXC,OAAOL,EAAO,KAAKM,QAAQ,QAAQ","file":"static/js/9.b6f55fea.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport './singleproduct.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useGlobalContext } from '../../context';\r\nimport { Link } from 'react-router-dom';\r\nimport {formatPrice} from '../../utils/formatPrice';\r\nimport Loader from '../../components/loader';\r\nimport Error from '../../components/error';\r\n\r\nconst SingleProduct = () => {\r\n    const {addCartItem} = useGlobalContext();   \r\n    const {id} = useParams();\r\n    const [item,setItem] = useState({});\r\n    const [error,setError] = useState(false);\r\n    const [isLoading,setIsLoading] = useState(true);\r\n    const [currentImage,setCurrentImage] = useState(0);\r\n    const [showMsg,setShowMsg] = useState(false);\r\n    \r\n    useEffect(()=>{\r\n        setError(false);\r\n        setIsLoading(true);\r\n        axios.get(`/product/shop/${id}`)\r\n            .then(res => {\r\n                setItem(res.data);\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) =>{setError(true)});\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        let x = setTimeout(()=>{\r\n            setShowMsg(false);\r\n        },5000)\r\n        return ()=>{\r\n            clearTimeout(x);\r\n        }\r\n    },[showMsg])\r\n\r\n    if(isLoading){\r\n        return <Loader/>;\r\n    }\r\n    if(error){\r\n        return <Error/>;\r\n    }\r\n    return (\r\n        <> \r\n            {item.error?<div className=\"item_error\">{item.error}</div>:\r\n                <div className=\"item\">\r\n                    <div className={`${showMsg?'item__added show': 'item__added'}`}>\r\n                        <div className=\"center\">\r\n                            <span className=\"msg\">item added</span>\r\n                            <Link to=\"/cart\">preview</Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"item__container center\">\r\n                        \r\n                        <div className=\"item__slider\">\r\n                            <div className=\"item__slider__wrapper\">\r\n                                <div className=\"item__img\">\r\n                                    {item.img && item.img.map((image,index)=>{\r\n                                        return <img  key={index} className={`${currentImage===index?'active':null}`} src={`https://sbcoffeecompany.herokuapp.com/${image}`} alt={item && item.name}/>\r\n                                    })}\r\n                                </div>\r\n                                <div className=\"item__thumb__bar\">\r\n                                    {item.img && item.img.map((image,index)=>{\r\n                                        return <span className={`item__thumb ${currentImage===index?'active':null}`} key={index} onClick={()=>setCurrentImage(index)}><img className=\"item__thumb__image\" src={`https://sbcoffeecompany.herokuapp.com/${image}`} alt=\"\"/></span>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"item__info\">\r\n                            <div className=\"item__info__wrapper\">\r\n                                <p className=\"item__info__name\">{item.name}</p>\r\n                                <p className=\"item__info__price\">PRICE: {formatPrice(item.price)}</p>\r\n                                <p className=\"item__info__weight\">{item.weight==='null'?'':item.weight}</p>\r\n                                <p className=\"item__info__desc\">{item.description}</p>\r\n                                {item.stock?\r\n                                    <>\r\n                                    <div className=\"btn-wrapper\">\r\n                                        <span className=\"btn__general\" onClick={()=>{setShowMsg(true); addCartItem(item._id,1)}}>add to cart</span>\r\n                                    </div>\r\n                                    </>\r\n                                    :<div className=\"item__outofstock\">\r\n                                        this product is currently unavailable.\r\n                                    </div>         \r\n                                }\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleProduct\r\n","import React from 'react';\r\nimport './error.css';\r\n\r\nconst Error = () => {\r\n    return (\r\n        <div className=\"fetch__error\">\r\n            <h1>an error occurred</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","export const formatPrice = (number) =>{\r\n    const newNumber = Intl.NumberFormat('en-IN',{\r\n        style: 'currency',\r\n        currency: 'INR'\r\n    }).format(number/100).replace(/\\.00$/,'');\r\n    return newNumber;\r\n}"],"sourceRoot":""}