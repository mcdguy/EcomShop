{"version":3,"sources":["components/billingAddress/index.js","components/shippingAddress/index.js","assets/images/order__success.jpg","components/orderModal/index.js","components/alert/index.js","pages/Checkout/index.js","components/cartSummary/index.js","components/cartItem/index.js","components/cartComponent/index.js"],"names":["BillingAddress","useCheckoutContext","billingAddress","billingError","handleBillingAddress","handleBillingState","useState","showDropdown","setShowDropDown","className","required","value","billingaddressLine","onChange","type","name","htmlFor","bAddressLine","onClick","billingstate","bState","state","map","s","billingcity","bCity","billingpin","bPin","billingcontact","bContact","ShippingAddress","shippingAddress","shippingError","handleShippingAddress","handleShippingState","e","shippingaddressLine","id","sAddressLine","shippingstate","sState","shippingcity","sCity","shippingpin","sPin","OrderModal","email","hideOrderAlert","src","successLogo","alt","Alert","message","setShowAlert","useEffect","x","setTimeout","clearTimeout","Checkout","showShipping","showShippingAddress","hideShippingAddress","makePayment","user","handleUserDetails","userError","orderAlert","showAlert","saveDetails","setSaveDetails","useCartContext","couponCode","setCouponError","couponError","setCouponCode","verifyCoupon","discount","isLoggedIn","useGlobalContext","show","autoComplete","target","placeholder","xmlns","viewBox","d","fill","stroke","strokeWidth","strokeLinejoin","strokeMiterlimit","checked","source","CartSummary","discountAmount","cartTotalItems","cartTotalAmount","formatPrice","to","CartItem","img","price","pqty","_id","cartProducts","stock","updateCartItem","removeCartItem","quantity","setQuantity","decreaseQuantity","increaseQuantity","CartComponent","length","item"],"mappings":"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","file":"static/js/4.19192020.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport {state} from '../../data';\r\nimport {useCheckoutContext} from '../../checkoutContext';\r\nconst BillingAddress = () => {\r\n    const {billingAddress,billingError,handleBillingAddress,handleBillingState} = useCheckoutContext();\r\n    const [showDropdown,setShowDropDown] = useState(false);\r\n    return (\r\n        <div className=\"billing\">\r\n            <form> \r\n                <div className=\"address__inp__wrapper anim--inp--wrapper\">\r\n                    <input required className=\"address__inp anim--inp\" value={billingAddress.billingaddressLine} onChange={handleBillingAddress} type=\"text\" name=\"billingaddressLine\" />\r\n                    <label className=\"address__inp__label anim--inp--label\" htmlFor=\"billingaddressLine\"> <span>street</span>  </label>\r\n                    {billingError.bAddressLine?<span className=\"address__inp__error anim--inp--error\">{billingError.bAddressLine}</span>:null}\r\n                </div>\r\n                <div className=\"address__inp__wrapper anim--inp--wrapper\" onClick={()=>setShowDropDown(!showDropdown)}>\r\n                    <div className=\"state__dropdown\">\r\n                        <div className=\"state__option__head\">\r\n                            {billingAddress.billingstate}\r\n                            <label className={`${billingAddress.billingstate===''?\"address__inp__label anim--inp--label\":\"address__inp__label anim--inp--label anim__text__head__label\"}`} htmlFor=\"billingstate\"> <span>state</span> </label>\r\n                            {billingError.bState?<span className=\"address__inp__error anim--inp--error\">{billingError.bState}</span>:null}\r\n                        </div>\r\n                        {showDropdown?<div className=\"state__options\">\r\n                            {state.map(s=>{\r\n                                return (\r\n                                    <div key={s} onClick={()=>handleBillingState(s)} className=\"state__op\">{s}</div>\r\n                                )\r\n                            })}\r\n                        </div>:null}\r\n                    </div>\r\n                </div>\r\n                <div className=\"address__inp__wrapper anim--inp--wrapper\">\r\n                    <input required className=\"address__inp anim--inp\" value={billingAddress.billingcity} onChange={handleBillingAddress} name=\"billingcity\" type=\"text\"/>\r\n                    <label className=\"address__inp__label anim--inp--label\" htmlFor=\"billingcity\"> <span>city</span> </label>\r\n                    {billingError.bCity?<span className=\"address__inp__error anim--inp--error\">{billingError.bCity}</span>:null}\r\n                </div>\r\n\r\n                <div className=\"address__inp__wrapper anim--inp--wrapper\">\r\n                    <input required className=\"address__inp anim--inp\" value={billingAddress.billingpin} onChange={handleBillingAddress} name=\"billingpin\" type=\"number\"/>\r\n                    <label className=\"address__inp__label anim--inp--label\" htmlFor=\"billingpin\"> <span>pin</span> </label>\r\n                    {billingError.bPin?<span className=\"address__inp__error anim--inp--error\">{billingError.bPin}</span>:null}\r\n                </div>\r\n                <div className=\"address__inp__wrapper anim--inp--wrapper\">\r\n                    <input required className=\"address__inp anim--inp\" value={billingAddress.billingcontact} onChange={handleBillingAddress} name=\"billingcontact\" type=\"number\" />\r\n                    <label className=\"address__inp__label anim--inp--label\" htmlFor=\"billingcontact\"> <span>contact</span> </label>\r\n                    {billingError.bContact?<span className=\"address__inp__error anim--inp--error\">{billingError.bContact}</span>:null}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillingAddress\r\n","import React,{useState} from 'react';\r\nimport { useCheckoutContext } from '../../checkoutContext';\r\nimport {state} from '../../data';\r\n\r\n\r\nconst ShippingAddress = () => {\r\n    const {shippingAddress,shippingError,handleShippingAddress,handleShippingState} = useCheckoutContext();   \r\n    const [showDropdown,setShowDropDown] = useState(false);\r\n    return (\r\n        <div className=\"shipping\">\r\n            <form> \r\n                <div className=\"address__inp__wrapper anim--inp--wrapper\">\r\n                    <input required className=\"address__inp anim--inp\" type=\"text\" onChange={(e)=>handleShippingAddress(e)} value={shippingAddress.shippingaddressLine} id=\"shippingaddressLine\" name=\"shippingaddressLine\" />\r\n                    <label className=\"address__inp__label anim--inp--label\" htmlFor=\"shippingaddressLine\"> <span>street</span>  </label>\r\n                    {shippingError.sAddressLine?<span className=\"address__inp__error anim--inp--error\">{shippingError.sAddressLine}</span>:null}\r\n                </div>\r\n                <div className=\"address__inp__wrapper anim--inp--wrapper\" onClick={()=>setShowDropDown(!showDropdown)}>\r\n                    <div className=\"state__dropdown\">\r\n                        <div className=\"state__option__head\">\r\n                            {shippingAddress.shippingstate}\r\n                            <label className={`${shippingAddress.shippingstate===''?\"address__inp__label anim--inp--label\":\"address__inp__label anim--inp--label anim__text__head__label\"}`} htmlFor=\"billingstate\"> <span>state</span> </label>\r\n                            {shippingError.sState?<span className=\"address__inp__error anim--inp--error\">{shippingError.sState}</span>:null}                            \r\n                        </div>\r\n                        {showDropdown?<div className=\"state__options\">\r\n                            {state.map(s=>{\r\n                                return (\r\n                                    <div key={s} onClick={()=>handleShippingState(s)} className=\"state__op\">{s}</div>\r\n                                )\r\n                            })}\r\n                        </div>:null}\r\n                    </div>\r\n                </div>\r\n                <div className=\"address__inp__wrapper anim--inp--wrapper\">\r\n                    <input required className=\"address__inp anim--inp\" onChange={(e)=>handleShippingAddress(e)} value={shippingAddress.shippingcity} name=\"shippingcity\" type=\"text\" />\r\n                    <label className=\"address__inp__label anim--inp--label\" htmlFor=\"shippingcity\"> <span>city</span> </label>\r\n                    {shippingError.sCity?<span className=\"address__inp__error anim--inp--error\">{shippingError.sCity}</span>:null}\r\n                </div>\r\n                <div className=\"address__inp__wrapper anim--inp--wrapper\">\r\n                    <input required className=\"address__inp anim--inp\" onChange={(e)=>handleShippingAddress(e)} value={shippingAddress.shippingpin} name=\"shippingpin\" type=\"number\" />\r\n                    <label className=\"address__inp__label anim--inp--label\" htmlFor=\"shippingpin\"><span>pin</span>  </label>\r\n                    {shippingError.sPin?<span className=\"address__inp__error anim--inp--error\">{shippingError.sPin}</span>:null}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShippingAddress\r\n","export default __webpack_public_path__ + \"static/media/order__success.5b096b2c.jpg\";","import React from 'react';\r\nimport './orderModal.css';\r\nimport successLogo from '../../assets/images/order__success.jpg';\r\nimport {GrClose} from \"react-icons/gr\";\r\n\r\nconst OrderModal = ({id,email,hideOrderAlert}) => {\r\n    return (\r\n        <div className=\"order__modal__wrapper\">\r\n            <div className=\"order__modal\">\r\n                <GrClose onClick={hideOrderAlert}/>\r\n                <img src={successLogo} alt=\"\"/>\r\n                <h1>Your order has been received</h1>\r\n                <h4>Your order id is:</h4>\r\n                <h5>{id} </h5>\r\n                <h4> An email has been sent to:</h4>\r\n                <h5>{email} </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderModal\r\n","import React,{useEffect} from 'react';\r\nimport './alert.css';\r\nimport {GrClose} from \"react-icons/gr\";\r\n\r\nconst Alert = ({message,setShowAlert}) => {\r\n    useEffect(()=>{\r\n        let x = setTimeout(()=>{\r\n            setShowAlert(false);\r\n        },2000);\r\n        return ()=>clearTimeout(x);\r\n    },[]);\r\n    return (\r\n        <div className=\"alert_wrapper\">\r\n            <div className=\"alert\">\r\n            <GrClose onClick={()=>setShowAlert(false)}/>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react';\r\nimport { useGlobalContext } from '../../context';\r\nimport './checkout.css';\r\nimport BillingAddress from '../../components/billingAddress';\r\nimport ShippingAddress from '../../components/shippingAddress';\r\nimport { useCheckoutContext } from '../../checkoutContext';\r\nimport CartSummary from '../../components/cartSummary';\r\nimport CartComponent from '../../components/cartComponent';\r\nimport OrderModal from '../../components/orderModal';\r\nimport { useCartContext } from '../../cartContext';\r\nimport Alert from '../../components/alert';\r\n\r\nconst Checkout = () => {\r\n    const { showShipping,showShippingAddress,hideShippingAddress,makePayment,user,handleUserDetails,userError,orderAlert,hideOrderAlert,showAlert,setShowAlert,saveDetails,setSaveDetails} = useCheckoutContext();\r\n    const {couponCode,setCouponError,couponError,setCouponCode,verifyCoupon,discount} = useCartContext();\r\n    const {isLoggedIn} = useGlobalContext();\r\n\r\n    const handleCheckbox = (e) =>{\r\n        if(e.target.checked){\r\n            hideShippingAddress();\r\n        }\r\n        else{\r\n            showShippingAddress();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"center\">\r\n            {showAlert && <Alert setShowAlert={setShowAlert} message={'cart has been modified'}/>}\r\n            {orderAlert.show && <OrderModal {...orderAlert} hideOrderAlert={hideOrderAlert}/>}\r\n                <div className=\"checkout__form\">\r\n                        <div className=\"user__wrapper\">\r\n                            <h1 className=\"form__type\">user details</h1>\r\n                            <div className=\"user__form\">\r\n                                <form>\r\n                                    <div className=\"anim--inp--wrapper\">\r\n                                        <input className=\"anim--inp\" type=\"text\" id=\"userformname\" value={user.name} onChange={e=>handleUserDetails(e)} autoComplete='off' name=\"name\" required/>\r\n                                        <label htmlFor=\"userformname\" className=\"anim--inp--label\">name</label>\r\n                                        {userError.name?<span className=\"anim--inp--error\">{userError.name}</span>:null}\r\n                                    </div>\r\n                                    <div className=\"anim--inp--wrapper\">\r\n                                        <input className=\"anim--inp\" type=\"text\" id=\"userformemail\" value={user.email} onChange={e=>handleUserDetails(e)} autoComplete='off' name=\"email\" required/>\r\n                                        <label htmlFor=\"userformemail\" className=\"anim--inp--label\">email</label>\r\n                                        {userError.email?<span className=\"anim--inp--error\">{userError.email}</span>:null}\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"billing__wrapper\">\r\n                            <h1 className=\"form__type\">billing address</h1>\r\n                            <BillingAddress/>\r\n                        </div>\r\n                        {showShipping && \r\n                        <div className=\"shipping__wrapper\">\r\n                            <h1 className=\"form__type type-billing\">shipping address</h1>\r\n                            <ShippingAddress/>\r\n                        </div>}\r\n                      \r\n                        <div className=\"promo__code\">\r\n                            <div className=\"promo__wrapper\">\r\n                                <div className=\"promo__input__wrapper\">\r\n                                    <input value={couponCode} onChange={(e)=>{setCouponCode(e.target.value);setCouponError('')}} placeholder=\"got a promo code?\" type=\"text\"></input>\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className={discount?'valid': 'nothing'} viewBox=\"0 0 37 37\">\r\n                                        <path\r\n                                            className=\"circ path\"\r\n                                            d=\"M30.5 6.5h0c6.6 6.6 6.6 17.4 0 24h0c-6.6 6.6-17.4 6.6-24 0h0c-6.6-6.6-6.6-17.4 0-24h0c6.6-6.7 17.4-6.7 24 0z\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"#000\"\r\n                                            strokeWidth={3}\r\n                                            strokeLinejoin=\"round\"\r\n                                            strokeMiterlimit={10}\r\n                                        />\r\n                                        <path\r\n                                            className=\"tick path\"\r\n                                            fill=\"none\"\r\n                                            stroke=\"#000\"\r\n                                            strokeWidth={3}\r\n                                            strokeLinejoin=\"round\"\r\n                                            strokeMiterlimit={10}\r\n                                            d=\"M11.6 20l4.3 4.2 10.5-10.4\"\r\n                                        />\r\n                                    </svg>\r\n                                    {couponError===''?null:<span className=\"anim--inp--error coupon__error\">{couponError}</span>}\r\n                                </div>\r\n                                <button className=\"button__effect\" onClick={verifyCoupon} >apply</button>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"checkout__checkbox\">\r\n                            <input type=\"checkbox\" id=\"same-address\" onChange={handleCheckbox} checked={!showShipping} />\r\n                            <label htmlFor=\"same-address\"> billing address same as shipping address</label>\r\n                        </p>\r\n                        {isLoggedIn?<p className=\"checkout__checkbox\">\r\n                            <input type=\"checkbox\" id=\"save-details\" onChange={()=>setSaveDetails(!saveDetails)} checked={!showShipping} checked={saveDetails}/>\r\n                            <label htmlFor=\"save-details\"> save details</label>\r\n                        </p>:null}\r\n                        <div className=\"btn__wrapper\"><button className=\"checkout__btn\" onClick={makePayment}>make payment</button></div>\r\n                </div>\r\n                <div className=\"checkout__sidebar\">\r\n                    {/* passing source to hide checkbox in checkout form */}\r\n                    <CartComponent source={'checkout'}/>\r\n                    <CartSummary source={'checkout'}/>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","import React from 'react';\r\nimport { useCartContext } from '../../cartContext';\r\nimport './cartSummary.css';\r\nimport { Link } from 'react-router-dom';\r\nimport {formatPrice} from '../../utils/formatPrice';\r\n\r\nconst CartSummary = ({source}) => {\r\n    const {discountAmount,cartTotalItems,cartTotalAmount} = useCartContext();\r\n    return (\r\n        <div className=\"cart__summary\">\r\n            <h1>order summary</h1>\r\n            <div className=\"cart__summary__info\">\r\n                <div className=\"cart__summary__details\">\r\n                    <p>items</p>\r\n                    <p>{cartTotalItems}</p>\r\n                </div>\r\n                <div className=\"cart__summary__details\">\r\n                    <p>sub total</p>\r\n                    <p>{formatPrice(discountAmount + cartTotalAmount)}</p>\r\n                </div>\r\n                <div className=\"cart__summary__details\">\r\n                    <p>discount</p>\r\n                    <p>(-) {formatPrice(discountAmount)}</p>\r\n                </div>\r\n                <div className=\"cart__summary__details cart__summary__total\">\r\n                    <p>total amount</p>\r\n                    <p>{formatPrice(cartTotalAmount)}</p>\r\n                </div>\r\n            </div>\r\n            {source==='cart'?\r\n                <Link to='/checkout' className=\"btn__general\">checkout</Link>\r\n                :null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartSummary\r\n","import React,{useState,useEffect} from 'react';\r\nimport { useGlobalContext } from '../../context';\r\nimport './cartItem.css';\r\nimport {GrClose} from \"react-icons/gr\";\r\nimport {BiMinus,BiPlus} from \"react-icons/bi\";\r\nimport { Link } from 'react-router-dom';\r\nimport {formatPrice} from '../../utils/formatPrice';\r\n\r\nconst CartItem = ({img,name,price,pqty,_id,cartProducts,stock}) => {\r\n    const {updateCartItem,removeCartItem} = useGlobalContext();\r\n    const [quantity,setQuantity] = useState(0);\r\n    const cartItem = () =>{\r\n        return (\r\n            <div className=\"cart__item\">\r\n                <Link to={`/shop/${_id}`}>\r\n                    <img src={`https://sbcoffeecompany.herokuapp.com/${img[0]}`} alt=\"\"/>\r\n                </Link>\r\n                <div className=\"cart__item__info\">\r\n                    <p className=\"cart__item__name\">{name}</p>\r\n                    <p className=\"cart__item__price\">{formatPrice(price)}</p>\r\n                    <span className=\"cart__item__qty\">\r\n                            <span className='cart__item__qty__inc control' onClick={decreaseQuantity}><BiMinus/></span>     \r\n                            <span>{quantity}</span>     \r\n                            <span className='cart__item__qty__dec control' onClick={increaseQuantity}><BiPlus/></span>\r\n                    </span>\r\n                </div>\r\n                <button className=\"cart__item__remove\" onClick={()=>removeCartItem(_id)}><GrClose/><span className=\"cart__item__tooltip\">remove</span></button>\r\n            </div>\r\n        );\r\n    }\r\n    const decreaseQuantity = () =>{\r\n        //quantity can't be 0\r\n        if(quantity === 1){\r\n            return;\r\n        }\r\n        setQuantity(quantity => {return(quantity-1)});\r\n    }\r\n    const increaseQuantity = () =>{\r\n        if(quantity >= stock){\r\n            setQuantity(stock);\r\n            return;\r\n        }\r\n        setQuantity(quantity => {return(quantity+1)})\r\n    }\r\n    useEffect(()=>{\r\n        //checking at the time of initializing that if the quantity is less than the purchase quantity\r\n        if(pqty>stock){\r\n            setQuantity(stock);\r\n            return;\r\n        }\r\n        setQuantity(pqty);\r\n    },[cartProducts]);\r\n\r\n    useEffect(()=>{\r\n        //without this quantity will become 0 because of initial value of quantity\r\n        if(quantity>0){\r\n            updateCartItem(quantity,_id);\r\n        }\r\n    },[quantity]);\r\n\r\n    return (\r\n        <>\r\n            {cartItem()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","import React from 'react'\r\nimport './cartComponent.css';\r\nimport CartItem from '../cartItem';\r\nimport { useCartContext } from '../../cartContext';\r\n\r\nconst CartComponent = ({source}) => {\r\n    const {cartProducts} = useCartContext();\r\n    return (\r\n        <div className=\"cart__products\">\r\n             {cartProducts.length ? cartProducts.map(item=>{\r\n                    return(\r\n                        <CartItem key={item._id} source={source} cartProducts={cartProducts} {...item}/>//passing cart products to make it a dependency in useEffect\r\n                    )\r\n                }):null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartComponent\r\n"],"sourceRoot":""}